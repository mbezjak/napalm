# type:/bin/bash
#
# Copyright (c) 2010 Miro Bezjak <bezjak.miro@gmail.com>
#
# Licensed under the MIT License (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.opensource.org/licenses/mit-license.php
#

configure_environment() {
  if [[ -z "$NAPALM_USER_HOME" ]]; then
    NAPALM_USER_HOME=$HOME/.napalm
  fi

  PROGRAMS_DIR=${NAPALM_USER_HOME}/programs
}

list_plugins() {
  local _count=0
  local _plugins=''

  for f in ${NAPALM_HOME}/plugins/* ${NAPALM_USER_HOME}/plugins/*
  do
    let _count="$_count + 1"
    _plugins="${_plugins} $(basename $f)"
  done

  echo "Plugins[$_count]:$_plugins"
}

# args:
# $1 - program name
# $2 - program version
show_program() {
  # Yeah, I know it's inefficient.
  # A millisecond here, a millisecond there...
  # It's too little for me to care.
  # :)

  # _flag='*' means that is an active version

  # e.g. napalm show foo 1.3
  if [[ -n "$1" && -n "$2" ]]; then
    local _link=${PROGRAMS_DIR}/$1
    local _prog=${_link}-$2
    local _flag=' '

    [[ ! -d $_prog ]] && {
      echo "Not installed: $1 $2"
      return 1
    }

    # link exists and points towards foo-1.3
    [[ -L $_link && $(readlink -f $_link) == $_prog ]] && _flag='*'

    echo " $_flag $_prog"
    return 0

  # e.g. napalm show foo
  elif [[ -n "$1" ]]; then
    local _link=${PROGRAMS_DIR}/$1
    local _flag=' '
    local _iterator=$(find $PROGRAMS_DIR -mindepth 1 -maxdepth 1 -type d -printf "%f\n")

    [[ -z $_iterator ]] && {
      echo "Not installed: $1"
      return 1
    }

    for p in $_iterator
    do
      local _prog=${_tmp}/${p}

      # link exists and points towards $_prog
      [[ -L $_link && $(readlink -f $_link) == $_prog ]] && _flag='*'

      echo " $_flag $_prog"
    done
    return 0

  # e.g. napalm show
  else
    local _flag=' '
    local _iterator=$(find $PROGRAMS_DIR -mindepth 1 -maxdepth 1 -type d -printf "%f\n")

    [[ -z $_iterator ]] && {
      echo "Nothing installed"
      return 1
    }

    for p in $_iterator
    do
      local _prog=${_tmp}/${p}
      _flag=' '

      # if anyone points to $_prog set $_flag
      for l in $(find $PROGRAMS_DIR -mindepth 1 -maxdepth 1 -type l -printf "%f\n")
      do
        local _link=${_tmp}/$l
        [[ -L $_link && $(readlink -f $_link) == $_prog ]] && _flag='*'
      done

      echo " $_flag $_prog"
    done
  fi

}
